name: 'Task Comments Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/v1/tasks/{task_id}/comments'
    metadata:
      groupName: 'Task Comments Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create task comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task whose comment is to be created.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
      task: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The content of the comment. Must not be greater than 255 characters.'
        required: true
        example: 'This is a new comment'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: 'This is a new comment'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {  "data": {
          "id": 7,
          "content": "new comment",
          "created_at": "2025-01-03T05:27:32.000000Z",
          "updated_at": "2025-01-03T05:27:32.000000Z"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: 'Task Comments Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Task Comments'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      comment:
        name: comment
        description: 'The ID of the comment to be retrieved.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      comment: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {  "data": {
          "id": 7,
          "content": "new comment",
          "created_at": "2025-01-03T05:27:32.000000Z",
          "updated_at": "2025-01-03T05:27:32.000000Z"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: 'Task Comments Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task Comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      comment:
        name: comment
        description: 'The ID of the comment to be updated.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      comment: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The content of the comment. Must not be greater than 255 characters.'
        required: true
        example: 'This is a new comment'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: 'This is a new comment'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {  "data": {
          "id": 7,
          "content": "update comment",
          "created_at": "2025-01-03T05:27:32.000000Z",
          "updated_at": "2025-01-03T05:27:32.000000Z"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: 'Task Comments Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Task Comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      comment:
        name: comment
        description: 'The ID of the comment to be deleted.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      comment: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{  "message": "Success" }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
