name: 'Team Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/teams
    metadata:
      groupName: 'Team Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Teams'
      description: 'Retrieve a paginated list of teams with optional search and sorting functionality.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Filter teams by a search term in their name. This performs a partial match.'
        required: false
        example: search=engineering
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      column:
        name: column
        description: 'The column to sort teams by. Allowed values: `title`, `description`, `priority_levels`, `status`, `deadline_at`, `started_at`, `completed_at`, `created_at`. Defaults to `created_at`.'
        required: false
        example: column=name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'The direction to sort teams by. Allowed values: `asc`, `desc`. Defaults to `desc`.'
        required: false
        example: direction=asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: search=engineering
      column: column=name
      direction: direction=asc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/teams
    metadata:
      groupName: 'Team Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Team'
      description: 'Store a newly created team in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the team. Must be a string with a maximum length of 255 characters. Must not be greater than 255 characters.'
        required: true
        example: 'Engineering Team'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Engineering Team'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {  "data": {
          "id": 2,
          "name": "new team"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/teams/{id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Team'
      description: 'Display the specified team.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the team.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {  "data": {
          "id": 1,
          "name": "Enim a earum voluptate facilis cumque ex ut.",
          "members": [
          {
          "id": 2,
          "name": "Trey Bechtelar"
          },
          {
          "id": 3,
          "name": "Emerald Mertz"
          },
          ]
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/teams/{id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Team'
      description: 'Update the specified team in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the team.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the team. Must be a string with a maximum length of 255 characters. Must not be greater than 255 characters.'
        required: true
        example: 'Engineering Team'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Engineering Team'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          { "data": {
          "id": 1,
          "name": "updated team"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/teams/{id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Team'
      description: 'Remove the specified team storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the team.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
