name: 'Task Management'
description: ''
endpoints:
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{task_id}/status'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task Status'
      description: 'Update the status of the specified task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: ''
        required: true
        example: blocked
        type: string
        enumValues:
          - 'not started'
          - 'in progress'
          - completed
          - 'on hold'
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      status: blocked
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"data": {
          "id": 15,
          "title": "update title 1",
          "description": "description",
          "priority_level": "urgent",
          "status": "completed",
          "deadline_at": null,
          "started_at": "2024-12-22",
          "completed_at": "2024-12-22",
          "project": {
          "id": 2,
          "name": "update project",
          "description": "description"
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{task_id}/assign-developer'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'assign or reassign a developer to a task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      assigned_dev_id:
        name: assigned_dev_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      assigned_qa_id:
        name: assigned_qa_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {   "data": {
          "id": 2,
          "title": "Eum harum aliquid qui beatae inventore quo recusandae.",
          "description": "I'll try if I shall remember it in large letters. It was all ridges and furrows; the balls were live hedgehogs, the mallets live flamingoes, and the Hatter continued, 'in this way:-- \"Up above the world am I? Ah, THAT'S the great puzzle!' And she began fancying the sort of thing never happened, and now here I am so VERY much out of this ointment--one shilling the box-- Allow me to introduce some other subject of conversation. 'Are you--are you fond--of--of dogs?' The Mouse only growled in.",
          "priority_level": "low",
          "status": "completed",
          "deadline_at": "2025-01-14",
          "started_at": "2025-01-10",
          "completed_at": "2025-01-12",
          "created_at": "2025-01-10T08:29:13.000000Z",
          "project": {
          "id": 1,
          "name": "Odio et impedit error et veniam quam.",
          "description": "I'll be jury,\" Said cunning old Fury: \"I'll try the first to speak. 'What size do you know about it, you know.' 'Not at all,' said Alice: 'besides, that's not a moment like a serpent. She had.",
          "created_at": null
          },
          "assigned_dev": {
          "id": 2,
          "name": "Evalyn Conroy"
          },
          "assigned_qa": null
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tasks/{task_id}/unassign-developer'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'unassign a developer from a task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"data": {
          "id": 2,
          "title": "Eum harum aliquid qui beatae inventore quo recusandae.",
          "description": "I'll try if I shall remember it in large letters. It was all ridges and furrows; the balls were live hedgehogs, the mallets live flamingoes, and the Hatter continued, 'in this way:-- \"Up above the world am I? Ah, THAT'S the great puzzle!' And she began fancying the sort of thing never happened, and now here I am so VERY much out of this ointment--one shilling the box-- Allow me to introduce some other subject of conversation. 'Are you--are you fond--of--of dogs?' The Mouse only growled in.",
          "priority_level": "low",
          "status": "completed",
          "deadline_at": "2025-01-14",
          "started_at": "2025-01-10",
          "completed_at": "2025-01-12",
          "created_at": "2025-01-10T08:29:13.000000Z",
          "project": {
          "id": 1,
          "name": "Odio et impedit error et veniam quam.",
          "description": "I'll be jury,\" Said cunning old Fury: \"I'll try the first to speak. 'What size do you know about it, you know.' 'Not at all,' said Alice: 'besides, that's not a moment like a serpent. She had.",
          "created_at": null
          },
          "assigned_dev": null,
          "assigned_qa": null
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{task_id}/assign-qa'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'assign or reassign a QA to a task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      assigned_dev_id:
        name: assigned_dev_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      assigned_qa_id:
        name: assigned_qa_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {   "data": {
          "id": 2,
          "title": "Eum harum aliquid qui beatae inventore quo recusandae.",
          "description": "I'll try if I shall remember it in large letters. It was all ridges and furrows; the balls were live hedgehogs, the mallets live flamingoes, and the Hatter continued, 'in this way:-- \"Up above the world am I? Ah, THAT'S the great puzzle!' And she began fancying the sort of thing never happened, and now here I am so VERY much out of this ointment--one shilling the box-- Allow me to introduce some other subject of conversation. 'Are you--are you fond--of--of dogs?' The Mouse only growled in.",
          "priority_level": "low",
          "status": "completed",
          "deadline_at": "2025-01-14",
          "started_at": "2025-01-10",
          "completed_at": "2025-01-12",
          "created_at": "2025-01-10T08:29:13.000000Z",
          "project": {
          "id": 1,
          "name": "Odio et impedit error et veniam quam.",
          "description": "I'll be jury,\" Said cunning old Fury: \"I'll try the first to speak. 'What size do you know about it, you know.' 'Not at all,' said Alice: 'besides, that's not a moment like a serpent. She had.",
          "created_at": null
          },
          "assigned_dev": null,
          "assigned_qa": {
          "id": 2,
          "name": "Evalyn Conroy"
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tasks/{task_id}/unassign-qa'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unassign a QA to a task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {   "data": {
          "id": 2,
          "title": "Eum harum aliquid qui beatae inventore quo recusandae.",
          "description": "I'll try if I shall remember it in large letters. It was all ridges and furrows; the balls were live hedgehogs, the mallets live flamingoes, and the Hatter continued, 'in this way:-- \"Up above the world am I? Ah, THAT'S the great puzzle!' And she began fancying the sort of thing never happened, and now here I am so VERY much out of this ointment--one shilling the box-- Allow me to introduce some other subject of conversation. 'Are you--are you fond--of--of dogs?' The Mouse only growled in.",
          "priority_level": "low",
          "status": "completed",
          "deadline_at": "2025-01-14",
          "started_at": "2025-01-10",
          "completed_at": "2025-01-12",
          "created_at": "2025-01-10T08:29:13.000000Z",
          "project": {
          "id": 1,
          "name": "Odio et impedit error et veniam quam.",
          "description": "I'll be jury,\" Said cunning old Fury: \"I'll try the first to speak. 'What size do you know about it, you know.' 'Not at all,' said Alice: 'besides, that's not a moment like a serpent. She had.",
          "created_at": null
          },
          "assigned_dev": null,
          "assigned_qa": null
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Tasks'
      description: 'Retrieve a paginated list of tasks associated with a specific project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project whose tasks are to be retrieved.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      project: 1
    queryParameters:
      search:
        name: search
        description: 'Filter tasks by a search term in their title or description. This performs a partial match.'
        required: false
        example: search=homepage
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter tasks by their status.'
        required: false
        example: status=completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority_level:
        name: priority_level
        description: 'Filter tasks by their priority level.'
        required: false
        example: priority_level=high
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      column:
        name: column
        description: 'The column to sort tasks by. Allowed values: `title`, `description`, `priority_level`, `status`, `deadline_at`, `started_at`, `completed_at`, `created_at`. Defaults to `created_at`.'
        required: false
        example: column=title
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'The direction to sort tasks by. Allowed values: `asc`, `desc`. Defaults to `desc`.'
        required: false
        example: direction=asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number of the paginated results.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: search=homepage
      status: status=completed
      priority_level: priority_level=high
      column: column=title
      direction: direction=asc
      page: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/tasks'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Task'
      description: 'Store a newly created task in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task. Must not be greater than 255 characters.'
        required: true
        example: 'Implement authentication'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the task. Must not be greater than 500 characters.'
        required: true
        example: 'Develop login and registration functionality.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_dev_id:
        name: assigned_dev_id
        description: 'The ID of the user assigned to the task. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 5
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      priority_level:
        name: priority_level
        description: 'The priority level of the task.'
        required: false
        example: High
        type: string
        enumValues:
          - low
          - medium
          - high
          - urgent
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The current status of the task.'
        required: false
        example: 'In Progress'
        type: string
        enumValues:
          - 'not started'
          - 'in progress'
          - completed
          - 'on hold'
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
      deadline_at:
        name: deadline_at
        description: 'The deadline for completing the task.'
        required: false
        example: '2024-01-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      started_at:
        name: started_at
        description: 'The start date of the task.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      completed_at:
        name: completed_at
        description: 'The completion date of the task.'
        required: false
        example: '2024-01-20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      photo_attachments:
        name: photo_attachments
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Implement authentication'
      description: 'Develop login and registration functionality.'
      assigned_dev_id: 5
      priority_level: High
      status: 'In Progress'
      deadline_at: '2024-01-15'
      started_at: '2024-01-01'
      completed_at: '2024-01-20'
    fileParameters:
      photo_attachments:
        - null
    responses:
      -
        status: 201
        content: |-
          {    "data": {
          "id": 43,
          "title": "new taskdasdadasdsadsasdaddadasdasddas",
          "description": "this is descriptionp",
          "priority_level": null,
          "status": null,
          "deadline_at": null,
          "started_at": null,
          "completed_at": null,
          "created_at": "2025-01-12T05:03:50.000000Z",
          "photo_attachments": [
          {
          "id": 24,
          "url": "http://task-management-api-1.test/media/24/image-car.jpg",
          "name": "image-car.jpg",
          "size": 1834859,
          "mime_type": "image/jpeg"
          },
          {
          "id": 25,
          "url": "http://task-management-api-1.test/media/25/image-motorbike.jpg",
          "name": "image-motorbike.jpg",
          "size": 312287,
          "mime_type": "image/jpeg"
          }
          ],
          "project": {
          "id": 1,
          "name": "Odio et impedit error et veniam quam.",
          "description": "I'll be jury,\" Said cunning old Fury: \"I'll try the first to speak. 'What size do you know about it, you know.' 'Not at all,' said Alice: 'besides, that's not a moment like a serpent. She had.",
          "created_at": "2025-01-10T08:29:13.000000Z"
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Task'
      description: 'Display the specified task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task'
      description: 'Update the specified task in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task. Must not be greater than 255 characters.'
        required: true
        example: 'Implement authentication'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the task. Must not be greater than 500 characters.'
        required: true
        example: 'Develop login and registration functionality.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_dev_id:
        name: assigned_dev_id
        description: 'The ID of the user assigned to the task. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 5
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      priority_level:
        name: priority_level
        description: 'The priority level of the task.'
        required: false
        example: High
        type: string
        enumValues:
          - low
          - medium
          - high
          - urgent
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The current status of the task.'
        required: false
        example: 'In Progress'
        type: string
        enumValues:
          - 'not started'
          - 'in progress'
          - completed
          - 'on hold'
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
      deadline_at:
        name: deadline_at
        description: 'The deadline for completing the task.'
        required: false
        example: '2024-01-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      started_at:
        name: started_at
        description: 'The start date of the task.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      completed_at:
        name: completed_at
        description: 'The completion date of the task.'
        required: false
        example: '2024-01-20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      photo_attachments:
        name: photo_attachments
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Implement authentication'
      description: 'Develop login and registration functionality.'
      assigned_dev_id: 5
      priority_level: High
      status: 'In Progress'
      deadline_at: '2024-01-15'
      started_at: '2024-01-01'
      completed_at: '2024-01-20'
    fileParameters:
      photo_attachments:
        - null
    responses:
      -
        status: 200
        content: |-
          {    "data": {
          "id": 43,
          "title": "new taskdasdadasdsadsasdaddadasdasddas",
          "description": "this is descriptionp",
          "priority_level": null,
          "status": null,
          "deadline_at": null,
          "started_at": null,
          "completed_at": null,
          "created_at": "2025-01-12T05:03:50.000000Z",
          "photo_attachments": [
          {
          "id": 24,
          "url": "http://task-management-api-1.test/media/24/image-car.jpg",
          "name": "image-car.jpg",
          "size": 1834859,
          "mime_type": "image/jpeg"
          },
          {
          "id": 25,
          "url": "http://task-management-api-1.test/media/25/image-motorbike.jpg",
          "name": "image-motorbike.jpg",
          "size": 312287,
          "mime_type": "image/jpeg"
          }
          ],
          "project": {
          "id": 1,
          "name": "Odio et impedit error et veniam quam.",
          "description": "I'll be jury,\" Said cunning old Fury: \"I'll try the first to speak. 'What size do you know about it, you know.' 'Not at all,' said Alice: 'besides, that's not a moment like a serpent. She had.",
          "created_at": "2025-01-10T08:29:13.000000Z"
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Task'
      description: 'Remove the specified task from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/statuses-and-priority-levels
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List of statuses and priority levels'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
