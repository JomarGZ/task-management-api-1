name: 'Project Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/projects
    metadata:
      groupName: 'Project Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Projects'
      description: 'Display a listing of the projects.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      column:
        name: column
        description: 'The column to sort by. Allowed values: `name`, `description`, `created_at`.'
        required: false
        example: column=name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'The direction to sort by. Allowed values: `asc`, `desc`.'
        required: false
        example: direction=asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Filter projects by name or description. This performs a partial match.'
        required: false
        example: search=alpha
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      column: column=name
      direction: direction=asc
      search: search=alpha
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/task-management-api-1.test\/api\/v1\/projects?page=1","last":"http:\/\/task-management-api-1.test\/api\/v1\/projects?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/task-management-api-1.test\/api\/v1\/projects?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/task-management-api-1.test\/api\/v1\/projects","per_page":5,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/projects
    metadata:
      groupName: 'Project Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Project'
      description: 'Store a newly created project in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the project. Must not be greater than 255 characters.'
        required: true
        example: 'Website Redesign'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the project. Must not be greater than 500 characters.'
        required: true
        example: 'Redesigning the company website to improve user experience.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      team_id:
        name: team_id
        description: 'The ID of the team assigned to the project. This field is optional. The <code>id</code> of an existing record in the teams table.'
        required: false
        example: 3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Website Redesign'
      description: 'Redesigning the company website to improve user experience.'
      team_id: 3
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {   "data": {
          "id": 4,
          "name": "new project",
          "description": "description"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: 'Project Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Project'
      description: 'Display the specified project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"data": {
          "id": 2,
          "name": "update project 4324",
          "description": "description",
          "team_assignee": {
          "id": 1,
          "name": "Enim a earum voluptate facilis cumque ex ut."
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: 'Project Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Project'
      description: 'Update the specified project in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the project. Must not be greater than 255 characters.'
        required: true
        example: 'Website Redesign'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the project. Must not be greater than 500 characters.'
        required: true
        example: 'Redesigning the company website to improve user experience.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      team_id:
        name: team_id
        description: 'The ID of the team assigned to the project. This field is optional. The <code>id</code> of an existing record in the teams table.'
        required: false
        example: 3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Website Redesign'
      description: 'Redesigning the company website to improve user experience.'
      team_id: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          { "data": {
          "id": 2,
          "name": "update project",
          "description": "description",
          "team_assignee": {
          "id": 1,
          "name": "Enim a earum voluptate facilis cumque ex ut."
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: 'Project Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Project'
      description: 'Remove the specified project from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
