## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Task Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Tasks'
      description: 'Retrieve a paginated list of tasks associated with a specific project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project whose tasks are to be retrieved.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
      project: 1
    queryParameters:
      search:
        name: search
        description: 'Filter tasks by a search term in their title or description. This performs a partial match.'
        required: false
        example: search=homepage
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter tasks by their status.'
        required: false
        example: status=completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority_level:
        name: priority_level
        description: 'Filter tasks by their priority level.'
        required: false
        example: priority_level=high
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      column:
        name: column
        description: 'The column to sort tasks by. Allowed values: `title`, `description`, `priority_level`, `status`, `deadline_at`, `started_at`, `completed_at`, `created_at`. Defaults to `created_at`.'
        required: false
        example: column=title
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'The direction to sort tasks by. Allowed values: `asc`, `desc`. Defaults to `desc`.'
        required: false
        example: direction=asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number of the paginated results.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: search=homepage
      status: status=completed
      priority_level: priority_level=high
      column: column=title
      direction: direction=asc
      page: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/task-management-api-1.test\/api\/v1\/projects\/1\/tasks?page=1","last":"http:\/\/task-management-api-1.test\/api\/v1\/projects\/1\/tasks?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/task-management-api-1.test\/api\/v1\/projects\/1\/tasks?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/task-management-api-1.test\/api\/v1\/projects\/1\/tasks","per_page":5,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/tasks'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Task'
      description: 'Store a newly created task in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task. Must not be greater than 255 characters.'
        required: true
        example: 'Implement authentication'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the task. Must not be greater than 500 characters.'
        required: true
        example: 'Develop login and registration functionality.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_id:
        name: assigned_id
        description: 'The ID of the user assigned to the task. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 5
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      priority_level:
        name: priority_level
        description: 'The priority level of the task.'
        required: false
        example: High
        type: string
        enumValues:
          - low
          - medium
          - high
          - urgent
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The current status of the task.'
        required: false
        example: 'In Progress'
        type: string
        enumValues:
          - 'not started'
          - 'in progress'
          - completed
          - 'on hold'
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
      deadline_at:
        name: deadline_at
        description: 'The deadline for completing the task.'
        required: false
        example: '2024-01-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      started_at:
        name: started_at
        description: 'The start date of the task.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      completed_at:
        name: completed_at
        description: 'The completion date of the task.'
        required: false
        example: '2024-01-20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'Implement authentication'
      description: 'Develop login and registration functionality.'
      assigned_id: 5
      priority_level: High
      status: 'In Progress'
      deadline_at: '2024-01-15'
      started_at: '2024-01-01'
      completed_at: '2024-01-20'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {"data": {
          "id": 18,
          "title": "new taskdasdadasdsadsasdaddadasdasddas",
          "description": "this is description",
          "priority_level": null,
          "status": null,
          "deadline_at": null,
          "started_at": null,
          "completed_at": null,
          "project": {
          "id": 2,
          "name": "update project",
          "description": "description"
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Task'
      description: 'Display the specified task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"title":"Culpa quia dolorem et consequatur.","description":"How brave they''ll all think me for a great hurry; ''and their names were Elsie, Lacie, and Tillie; and they walked off together, Alice heard it say to itself ''The Duchess! The Duchess! Oh my fur and whiskers! She''ll get me executed, as sure as ferrets are ferrets! Where CAN I have to whisper a hint to Time, and round goes the clock in a loud, indignant voice, but she did not notice this question, but hurriedly went on, ''you see, a dog growls when it''s pleased. Now I growl when I''m angry.","priority_level":"urgent","status":"blocked","deadline_at":"2025-01-06","started_at":"2025-01-02","completed_at":"2025-01-04","created_at":"2025-01-02T11:10:03.000000Z","project":{"id":1,"name":"Accusamus exercitationem quae aut voluptatem inventore odit.","description":"There was certainly English. ''I don''t think they play at all know whether it would not give all else for two reasons. First, because I''m on the spot.'' This did not like the name: however, it only.","created_at":"2025-01-02T11:10:02.000000Z"},"assigned_member":{"id":7,"name":"Perry Huel","team_role":"member"},"comments":[{"id":1,"content":"Yet you turned a back-somersault in at the Gryphon whispered in reply, ''for fear they should forget them before the end of half those long words, and, what''s more, I don''t keep the same thing as a.","created_at":"2025-01-02T11:14:32.000000Z","updated_at":"2025-01-02T11:14:32.000000Z","author":{"id":12,"name":"Mikayla Jaskolski","email":"franco.larkin@example.com","role":"admin"}}]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task'
      description: 'Update the specified task in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task. Must not be greater than 255 characters.'
        required: true
        example: 'Implement authentication'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the task. Must not be greater than 500 characters.'
        required: true
        example: 'Develop login and registration functionality.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_id:
        name: assigned_id
        description: 'The ID of the user assigned to the task. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 5
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      priority_level:
        name: priority_level
        description: 'The priority level of the task.'
        required: false
        example: High
        type: string
        enumValues:
          - low
          - medium
          - high
          - urgent
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The current status of the task.'
        required: false
        example: 'In Progress'
        type: string
        enumValues:
          - 'not started'
          - 'in progress'
          - completed
          - 'on hold'
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
      deadline_at:
        name: deadline_at
        description: 'The deadline for completing the task.'
        required: false
        example: '2024-01-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      started_at:
        name: started_at
        description: 'The start date of the task.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      completed_at:
        name: completed_at
        description: 'The completion date of the task.'
        required: false
        example: '2024-01-20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'Implement authentication'
      description: 'Develop login and registration functionality.'
      assigned_id: 5
      priority_level: High
      status: 'In Progress'
      deadline_at: '2024-01-15'
      started_at: '2024-01-01'
      completed_at: '2024-01-20'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"data": {
          "id": 15,
          "title": "update title 1",
          "description": "description",
          "priority_level": "urgent",
          "status": "completed",
          "deadline_at": null,
          "started_at": "2024-12-22",
          "completed_at": "2024-12-22",
          "project": {
          "id": 2,
          "name": "update project",
          "description": "description"
          }
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Task'
      description: 'Remove the specified task from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/statuses-and-priority-levels
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List of statuses and priority levels'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":200,"data":{"statuses":["not started","in progress","completed","on hold","blocked"],"priorityLevels":["low","medium","high","urgent"]},"message":"Statuses and priority levels retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
