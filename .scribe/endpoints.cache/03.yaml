## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Tenant Members Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tenant/members
    metadata:
      groupName: 'Tenant Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Tenant Members'
      description: 'Display a listing of the tenant members. This endpoint supports sorting, searching, and filtering by role.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      column:
        name: column
        description: 'The column to sort by. Valid columns are: name, email, created_at. Default is created_at.'
        required: false
        example: column=name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      direction:
        name: direction
        description: "The direction to sort. Either 'asc' or 'desc'. Default is 'desc'."
        required: false
        example: direction=asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'A search term to filter members by name or email.'
        required: false
        example: search=johndoe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'Filter by role.'
        required: false
        example: role=admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      column: column=name
      direction: direction=asc
      search: search=johndoe
      role: role=admin
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tenant/members
    metadata:
      groupName: 'Tenant Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Tenant member'
      description: 'Store a newly created Tenant member in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The full name of the tenant member. Must not be greater than 255 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'A unique email address for the tenant member. Must be a valid email address.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The role to assign to the tenant member. Valid values: `admin`, `member`, `project manager`, `team lead`.'
        required: true
        example: member
        type: string
        enumValues:
          - admin
          - member
          - 'project manager'
          - 'team lead'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      role: member
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          { "data": {
          "id": 14,
          "name": "adasdsdaasdsad",
          "email": "dasADda@gmail.com",
          "role": "member"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tenant/members/{user_id}'
    metadata:
      groupName: 'Tenant Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Tenant Member'
      description: 'Display the specified tenant member.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {   "data": {
          "id": 14,
          "name": "adasdsdaasdsad",
          "email": "dasADda@gmail.com",
          "role": "member"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/tenant/members/{user_id}'
    metadata:
      groupName: 'Tenant Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Tenant Member'
      description: 'Update the specified tenant member in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The full name of the tenant member. Must not be greater than 255 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'A unique email address for the tenant member. Must be a valid email address.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The role to assign to the tenant member. Valid values: `admin`, `member`, `project manager`, `team lead`.'
        required: true
        example: member
        type: string
        enumValues:
          - admin
          - member
          - 'project manager'
          - 'team lead'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      role: member
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {   "data": {
          "id": 14,
          "name": "adasdsdaasdsad",
          "email": "dasADda@gmail.com",
          "role": "member"
          }}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tenant/members/{user_id}'
    metadata:
      groupName: 'Tenant Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Tenant Member'
      description: 'Remove the specified tenant member from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|8EYBYnTUxZ5e8etdkHYpik1kYkWPL0cIDpthpAUce72bb176'
    controller: null
    method: null
    route: null
    custom: []
