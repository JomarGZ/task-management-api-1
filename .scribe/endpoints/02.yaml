name: 'Team Members Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/teams/{team_id}/members'
    metadata:
      groupName: 'Team Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Team Members'
      description: 'Display a listing of the team members.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":2,"name":"Prof. Kiera Corwin DVM","team_role":"member"},{"id":3,"name":"Eileen Thompson","team_role":"member"},{"id":4,"name":"Baylee Dicki","team_role":"member"},{"id":5,"name":"Kory Bailey","team_role":"member"},{"id":6,"name":"Okey Greenholt","team_role":"member"},{"id":7,"name":"Perry Huel","team_role":"member"},{"id":8,"name":"Herman Jenkins","team_role":"member"},{"id":9,"name":"Elyse Block","team_role":"member"},{"id":10,"name":"Hilma Fritsch","team_role":"member"},{"id":11,"name":"Piper Lemke","team_role":"team lead"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/teams/{team_id}/members'
    metadata:
      groupName: 'Team Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Team Member'
      description: 'Store a newly created team member in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      member_id:
        name: member_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The role to assign to the team members. Valid values: `admin`, `member`, `project manager`, `team lead`.'
        required: true
        example: member
        type: string
        enumValues:
          - 'team lead'
          - member
          - 'project manager'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      member_id: sequi
      role: member
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {  "data": [
          {
          "id": 2,
          "name": "Trey Bechtelar"
          "role": "member"
          }
          ]}
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/teams/{team_id}/members/{user_id}'
    metadata:
      groupName: 'Team Members Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Team Member'
      description: 'Remove the specified team member from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 1
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|lgqxcMuZhmBmxwnneuRUljoHRip5zYa3WWUVD71C480a6482'
    controller: null
    method: null
    route: null
    custom: []
