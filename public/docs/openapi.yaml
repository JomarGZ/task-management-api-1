openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://task-management-api-1.test'
paths:
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/auth/register:
    post:
      summary: ''
      operationId: postApiV1AuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jodykfwexnewtplchxebruvm
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: hills.ottis@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kzdjgq6Pv%g8x
                  nullable: false
              required:
                - name
                - email
                - password
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: postApiV1AuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: conroy.sheridan@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: vero
                  nullable: false
              required:
                - email
                - password
  /api/v1/tenant/members:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: ''
                  example: member
                  nullable: false
                  enum:
                    - admin
                    - member
                department_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the departments table.'
                  example: null
                  nullable: false
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vpv
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mmurazik@example.org
                  nullable: false
                role:
                  type: string
                  description: ''
                  example: admin
                  nullable: false
                  enum:
                    - admin
                    - member
                department_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the departments table.'
                  example: odio
                  nullable: false
              required:
                - name
                - email
                - role
                - department_id
  '/api/v1/tenant/members/{user_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cw
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: johnathan42@example.com
                  nullable: false
                role:
                  type: string
                  description: ''
                  example: member
                  nullable: false
                  enum:
                    - admin
                    - member
                department_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the departments table.'
                  example: voluptate
                  nullable: false
              required:
                - name
                - email
                - role
                - department_id
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
